import matplotlib.pyplot as plt
import numpy as np
from matplotlib import rcParams

# 设置字体更美观
rcParams['font.family'] = 'DejaVu Sans'

# 指标标签
labels = ['Accuracy', 'Precision', 'Recall', 'F1', 'AUC', 'AUPR']
num_labels = len(labels)

# 数据
# 2022年
model_A = [0.93481, 0.86912, 0.85762, 0.88093, 0.97693, 0.93734]
model_B = [0.91064, 0.82463, 0.79630, 0.85505, 0.96441, 0.90112]
# 2023年
# model_A = [0.93514, 0.86957, 0.86737, 0.87178, 0.97671, 0.93647]
# model_B = [0.91117, 0.82392, 0.81026, 0.83806, 0.96340, 0.89749]
# 2024年
# model_A = [0.91365, 0.82045, 0.85004, 0.79285, 0.96357, 0.89793]
# model_B = [0.88160, 0.75094, 0.78789, 0.71730, 0.93854, 0.83474]
# 2025年
# model_A = [0.90602, 0.79581, 0.86022, 0.74036, 0.95859, 0.89290]
# model_B = [0.88248, 0.75306, 0.78408, 0.72440, 0.93567, 0.83239]







models = [model_A, model_B]
model_names = ['With Attention', 'Without Attention']

# 柔和配色 + marker
# colors = ['#CDC1FF', '#FFCCEA']
colors = ['#a6cee3', '#b2df8a']
markers = ['o', 's']
linestyles = ['solid'] * 4
# 角度计算
# 角度计算
angles = np.linspace(0, 2 * np.pi, num_labels, endpoint=False).tolist()
angles += angles[:1]  # 闭合雷达图

# 创建图形
fig, ax = plt.subplots(figsize=(6, 6), subplot_kw=dict(polar=True))

# 画每条线
for i, model in enumerate(models):
    data = model + [model[0]]  # 闭合，不要修改原始 model_A / model_B
    ax.plot(angles, data, color=colors[i], linewidth=2, linestyle=linestyles[i],
            marker=markers[i], label=model_names[i])
    ax.fill(angles, data, color=colors[i], alpha=0.25)

# 添加标签
ax.set_thetagrids(np.degrees(angles[:-1]), labels, fontsize=12)

# 设置坐标范围
ax.set_ylim(0.5, 1)

# 添加图例
ax.legend(loc='upper right', bbox_to_anchor=(1.3, 1.1))
plt.tight_layout()
plt.show()
